{"version":3,"sources":["queries/queries.js","components/RemoveBike.js","components/BikeDetails.js","components/BikeList.js","components/AddBike.js","App.js","index.js"],"names":["getBikesQuery","gql","getCreatorsQuery","addBikeMutation","getBikeQuery","removeBikeMutation","RemoveBike","e","preventDefault","this","props","variables","id","bikeId","refetchQueries","query","Button","type","variant","onClick","removeBike","bind","Component","graphql","name","BikeDetails","data","bike","loading","error","Spinner","animation","role","className","title","creator","bikes","map","item","key","displayBikeDetails","options","BikeList","state","selected","setState","length","index","Card","Header","Accordion","Toggle","as","eventKey","Collapse","Body","Container","displayBikes","AddBike","creatorId","validated","creators","value","form","currentTarget","checkValidity","stopPropagation","reset","Form","noValidate","onSubmit","submitForm","Group","Label","htmlFor","Control","onChange","target","required","placeholder","Feedback","displayCreators","flowRight","client","ApolloClient","uri","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0655da07.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nconst getBikesQuery = gql`\n{\n  bikes{\n    id\n    title\n  }\n}\n`;\n\nconst getCreatorsQuery = gql`\n  {\n    creators{\n      id\n      name\n    }\n  }\n`;\n\nconst addBikeMutation = gql`\n  mutation($title: String!, $type: String!, $creatorId: ID!) {\n    addBike(title: $title, type: $type, creatorId: $creatorId) {\n      id\n      title\n    }\n  }\n`;\n\nconst getBikeQuery = gql`\n query($id: ID){\n   bike(id: $id){\n     id\n     title\n     type\n     creator{\n       id\n       name\n       age\n       bikes{\n         id\n         title\n       }\n     }\n   }\n }`;\n\nconst removeBikeMutation = gql`\n  mutation($id: ID!) {\n    removeBike(id: $id) {\n      id\n      title\n    }\n  }\n`\n\nexport {getBikesQuery, getCreatorsQuery, addBikeMutation, getBikeQuery, removeBikeMutation};","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\n\nimport {removeBikeMutation, getBikesQuery} from '../queries/queries';\n\nimport Button from 'react-bootstrap/Button';\n\nexport class RemoveBike extends Component {\n\n    removeBike(e){\n        e.preventDefault();\n        this.props.removeBikeMutation({\n          variables: {\n            id: this.props.bikeId\n          },\n          refetchQueries: [{query: getBikesQuery}]\n        });\n    }\n\n    render() {\n        return (\n            <Button type=\"button\" variant=\"danger\" onClick={this.removeBike.bind(this)}>Remove</Button>\n        );\n    };\n};\n\nexport default graphql(removeBikeMutation, {name: \"removeBikeMutation\"})(RemoveBike);\n  ","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport {getBikeQuery} from '../queries/queries';\n\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass BikeDetails extends Component {\n\n    displayBikeDetails(){\n      var { bike, loading, error } = this.props.data\n      if(loading && !error){\n        return (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading bike details...</span>\n          </Spinner>\n        )\n      }\n      else if(error){\n        return(<div>Error while loading the bike details...</div>)\n      }\n      if(bike){\n        return(\n          <div>\n            <h2>{ bike.title }</h2>\n            <p>Type: { bike.type }</p>\n            <p>Creator: { bike.creator.name }</p>\n            <p>All bikes by this creator:</p>\n            <ul className=\"other-bikes\">\n              { bike.creator.bikes.map(item => {\n                return(<li key={item.id}>{ item.title }</li>)\n              })}\n            </ul>\n          </div>\n        );\n      }\n    }\n\n    render() {\n      return (\n        <div id=\"bike-details\">\n          {this.displayBikeDetails()}\n        </div>\n      );\n    };\n};\n\nexport default graphql(getBikeQuery, {\n    options: (props)=>{\n        return {\n            variables: {\n               id: props.bikeId\n            }\n        }\n    }\n})(BikeDetails);\n  ","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\n\n// queries\nimport {getBikesQuery} from '../queries/queries';\n\n// components\nimport RemoveBike from './RemoveBike';\nimport BikeDetails from './BikeDetails';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\n\nclass BikeList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: null,\n      error: false\n    };\n  };\n\n  displayBikes(){\n    var data = this.props.data\n    if(data.loading && !data.error){\n      return(\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading bikes...</span>\n        </Spinner>\n      );\n    }\n    else if(data.error){\n      if(!this.state.error){\n        this.setState({error: true});\n      }\n      return(\n        <div>Error while loading bikes...</div>\n      );\n    }\n    else{\n      if(data.bikes.length > 0){\n        return data.bikes.map((bike, index) => {\n          return(\n            <Card key={index}>\n              <Card.Header>\n                <div className=\"row justify-content-between\">\n                  <Accordion.Toggle className=\"col-2\" as={Button} variant=\"light\" eventKey={bike.id} onClick={(e) => {this.setState({selected: bike.id});}}>\n                    {bike.title}\n                  </Accordion.Toggle>\n                  <RemoveBike className=\"col-2\" bikeId={bike.id}/>\n                </div>\n              </Card.Header>\n              <Accordion.Collapse eventKey={bike.id}>\n                <Card.Body>\n                  <BikeDetails bikeId={this.state.selected}/>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          )\n        });\n      }\n      else{\n        return (\n        <Card>\n          <Card.Header>We don't have any bike yet. Feel free to add one!</Card.Header>\n        </Card>\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Container id=\"bike-list\" className=\"p-2\">\n        <h2>All the bikes we have</h2>\n        <Accordion id=\"bike-list\">\n          { this.displayBikes() }\n        </Accordion>\n      </Container>\n    );\n  };\n};\n\nexport default graphql(getBikesQuery)(BikeList);\n","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight} from 'lodash';\n\n// queries\nimport {getCreatorsQuery, addBikeMutation, getBikesQuery} from '../queries/queries';\n\n// components\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\n\nclass AddBike extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      title: '',\n      type: '',\n      creatorId: '',\n      error: false,\n      validated: false\n    };\n  };\n\n  displayCreators(){\n    var data = this.props.getCreatorsQuery;\n    if (data.loading && !data.error){\n      return(<option>Loading creators...</option>);\n    }\n    else if(data.error) {\n      if(!this.state.error){\n        this.setState({error: true});\n      }\n      return null;\n    }\n    else {\n      return data.creators.map(creator => {\n        return(\n          <option key={creator.id} value={creator.id}>\n            {creator.name}\n          </option>\n        );\n      });\n    }\n  };\n\n  submitForm(e){\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else{\n      e.preventDefault();\n      this.props.addBikeMutation({\n        variables: {\n          title: this.state.title,\n          type: this.state.type,\n          creatorId: this.state.creatorId\n        },\n        refetchQueries: [{query: getBikesQuery}]\n      });\n    }\n    this.setState({validated: true});\n    form.reset();\n  };\n\n  render() {\n    return (\n      <Container id=\"addBike\" className=\"p-2\">\n        <h2>Add a bike</h2>\n        <Form noValidate validated={this.state.validated} id=\"add-bike-form\" onSubmit={this.submitForm.bind(this)}>\n          <Form.Group>\n            <Form.Label htmlFor=\"formTitle\">Bike title:</Form.Label>\n            <Form.Control\n              value={this.state.title}\n              onChange={(e) => this.setState({title: e.target.value})}\n              required\n              id=\"formTitle\"\n              type=\"text\"\n              placeholder=\"Enter the bike's title\"\n            />\n            <Form.Control.Feedback>Good choice!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please provide a title.</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"formType\">Type:</Form.Label>\n            <Form.Control\n              value={this.state.type}\n              onChange={(e) => this.setState({type: e.target.value})}\n              required\n              id=\"formType\"\n              type=\"text\"\n              placeholder=\"Enter the bike's type\"\n            />\n            <Form.Control.Feedback>My favourite type of bike</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">I think you forgot the type.</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label htmlFor=\"formCreator\" >Select a creator:</Form.Label>\n            <Form.Control\n              value={this.state.creatorId}\n              onChange={(e) => this.setState({creatorId: e.target.value})}\n              required\n              id=\"formCreator\"\n              as=\"select\"\n            >\n              <option value=''>--- Choose a creator --- </option>\n              {this.displayCreators()}\n            </Form.Control>\n            <Form.Control.Feedback>Nice choice!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Each bike has a creator, please choose one</Form.Control.Feedback>\n          </Form.Group>\n          <Button className=\"mr-1\" variant=\"dark\" type=\"submit\">Add bike</Button>\n        </Form>\n      </Container>\n    );\n  };\n};\n\nexport default flowRight([\n  graphql(getCreatorsQuery, {name: \"getCreatorsQuery\"}),\n  graphql(addBikeMutation, {name: \"addBikeMutation\"})\n])(AddBike);\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// components\nimport BikeList from './components/BikeList';\nimport AddBike from './components/AddBike';\n\n// apollo client setup\nconst client = new ApolloClient({\n  uri: 'https://the-bike-list.herokuapp.com/graphql'\n});\n\nclass App extends Component {\n  render(){\n    return (\n      <ApolloProvider client={client}>\n        <div id=\"main\">\n          <h1 className=\"text-center p-2\" >Just A Bike List</h1>\n          <AddBike />\n          <BikeList />\n        </div>\n      </ApolloProvider>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}